name: Build iOS App

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:

  checkout:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/upload-artifact@v2
        with:
          name: repository
          path: /Users/runner/work/shoot-report-ios/shoot-report-ios
        
  scheme:
    needs: checkout
    runs-on: macos-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: repository
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - uses: actions/upload-artifact@v2
        with:
          name: scheme
          path: default
          
  # lint:
  #   needs: scheme
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: repository
  #     - name: SwiftLint
  #       uses: norio-nomura/action-swiftlint@3.2.1
          
  # build:
  #   needs: scheme
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: repository
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: scheme
  #     - name: Build
  #       env:
  #         scheme: ${{ 'default' }}
  #         platform: ${{ 'iOS Simulator' }}
  #       run: |
  #         # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
  #         device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}'`
  #         if [ $scheme = default ]; then scheme=$(cat default); fi
  #         if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
  #         file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
  #         # xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
  #         xcodebuild -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device" -derivedDataPath  build
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: app
  #         path: build/Build/Products/Debug-iphonesimulator/